# generated by datamodel-codegen:
#   filename:  BallotStudio_16_Edits.JSON
#   timestamp: 2021-09-14T17:23:00+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class ContactInformation(BaseModel):
    _type: str = Field(..., alias='@type')


class CandidateItem(BaseModel):
    _type: str = Field(..., alias='@type')
    _id: str = Field(..., alias='@id')
    BallotName: str
    ContactInformation: ContactInformation
    PersonId: str


class ContestSelectionItem(BaseModel):
    _type: str = Field(..., alias='@type')
    _id: str = Field(..., alias='@id')
    CandidateIds: Optional[List[str]] = None
    EndorsementPartyIds: Optional[List[str]] = None
    IsWriteIn: Optional[bool] = None


class ContestItem(BaseModel):
    _type: str = Field(..., alias='@type')
    Name: str
    ElectionDistrictId: str
    VotesAllowed: Optional[int] = None
    _id: str = Field(..., alias='@id')
    BallotTitle: str
    BallotSubTitle: str
    ContestSelection: List[ContestSelectionItem]
    NumberElected: int
    OfficeIds: List[str]
    VoteVariation: str


class OrderedContentItem(BaseModel):
    _type: str = Field(..., alias='@type')


class BallotStyleItem(BaseModel):
    _type: str = Field(..., alias='@type')
    GpUnitIds: List[str]
    OrderedContent: List[OrderedContentItem]


class ElectionItem(BaseModel):
    _type: str = Field(..., alias='@type')
    Name: str
    Type: str
    StartDate: str
    EndDate: str
    ElectionScopeId: str
    Candidate: List[CandidateItem]
    Contest: List[ContestItem]
    BallotStyle: List[BallotStyleItem]


class ContactInformation1(BaseModel):
    _type: str = Field(..., alias='@type')


class GpUnitItem(BaseModel):
    _type: str = Field(..., alias='@type')
    _id: str = Field(..., alias='@id')
    Type: str
    Name: str
    ComposingGpUnitIds: Optional[List[str]] = None
    ContactInformation: ContactInformation1


class ContactInformation2(BaseModel):
    _type: str = Field(..., alias='@type')


class Term(BaseModel):
    _type: str = Field(..., alias='@type')
    Type: str


class OfficeItem(BaseModel):
    Name: str
    _id: str = Field(..., alias='@id')
    _type: str = Field(..., alias='@type')
    ContactInformation: ContactInformation2
    Term: Term


class ContactInformation3(BaseModel):
    _type: str = Field(..., alias='@type')


class PartyItem(BaseModel):
    Name: str
    _id: str = Field(..., alias='@id')
    _type: str = Field(..., alias='@type')
    Abbreviation: str
    ContactInformation: ContactInformation3


class ContactInformation4(BaseModel):
    _type: str = Field(..., alias='@type')


class PersonItem(BaseModel):
    FullName: str
    _id: str = Field(..., alias='@id')
    _type: str = Field(..., alias='@type')
    ContactInformation: ContactInformation4
    PartyId: str


class Model(BaseModel):
    Election: List[ElectionItem]
    GpUnit: List[GpUnitItem]
    Header: List
    Office: List[OfficeItem]
    Party: List[PartyItem]
    Person: List[PersonItem]
